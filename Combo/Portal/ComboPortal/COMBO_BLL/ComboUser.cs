
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using COMBO_DAL;
using System.Collections.Specialized;
using System.Data.SqlClient;
using System.Data;

namespace COMBO_BLL
{
	public class ComboUser : _ComboUser
	{
		public ComboUser()
		{
		    
		}

        public bool getAllUsers()
        {
            return LoadFromRawSql("SELECT * FROM ComboUser JOIN UserRank ON ComboUser.UserRankID = UserRank.UserRankID ORDER BY UserName ASC");
        }

        public bool getUsersSearch(string query, int UserRankID)
        {
            string sql1 = string.Format(@"SELECT * FROM ComboUser JOIN UserRank ON ComboUser.UserRankID = UserRank.UserRankID WHERE (((UserName LIKE N'%{0}%') OR (DisplayName LIKE N'%{0}%') OR (Email LIKE N'%{0}%')) AND ComboUser.UserRankID = {1}) ORDER BY UserName ASC", query, UserRankID);
            string sql2 = string.Format(@"SELECT * FROM ComboUser JOIN UserRank ON ComboUser.UserRankID = UserRank.UserRankID WHERE ((UserName LIKE N'%{0}%') OR (DisplayName LIKE N'%{0}%') OR (Email LIKE N'%{0}%')) ORDER BY UserName ASC", query);

            if (UserRankID!=0)
                return LoadFromRawSql(sql1);
            else
                return LoadFromRawSql(sql2);
        }
        public virtual bool GetUserStatisticsByUserId(int UserId)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@UserId", SqlDbType.Int, 0), UserId);
            return LoadFromSql("GetUserStatisticsByUserId", parameters);
        }

        public virtual bool GetUserByUserNameAndPassword(string UserName, string Password)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@UserName", SqlDbType.NVarChar, 200), UserName);
            parameters.Add(new SqlParameter("@Password", SqlDbType.NVarChar, 200), Password);
            return LoadFromSql("GetUserByUserNameAndPassword", parameters);

        }

        public virtual bool GetUserByPasscode(string passcode)
        {
            /*this.Where.PassResetCode.Value = new Guid(passcode);
            this.Where.PassResetCode.Operator = MyGeneration.dOOdads.WhereParameter.Operand.Equal;
            return this.Query.Load();*/
            //return LoadFromRawSql(@"Select CU.*, A.Path ProfilePic from ComboUser CU Left join Attachment A on CU.ProfileImgID = A.AttachmentID where CU.PassResetCode = {0}", new Guid(passcode));
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@Code", SqlDbType.UniqueIdentifier, 0), new Guid(passcode));
            return LoadFromSql("GetUserByPassCode", parameters);
        }

        public virtual bool GetUserByUserName(string UserName)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@UserName", SqlDbType.NVarChar, 200), UserName);
            return LoadFromSql("GetUserByUserName", parameters);

        }
	}
}
